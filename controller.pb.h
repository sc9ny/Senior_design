/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Apr 22 21:54:45 2018. */

#ifndef PB_CONTROLLER_CONTROLLER_PB_H_INCLUDED
#define PB_CONTROLLER_CONTROLLER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _controller_button {
    int32_t button_id;
    int32_t value;
/* @@protoc_insertion_point(struct:controller_button) */
} controller_button;

typedef struct _controller_movement {
    int32_t direction;
/* @@protoc_insertion_point(struct:controller_movement) */
} controller_movement;

typedef struct _controller_controller_msg {
    pb_size_t which_msg;
    union {
        controller_movement go;
        controller_button btn;
    } msg;
/* @@protoc_insertion_point(struct:controller_controller_msg) */
} controller_controller_msg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define controller_movement_init_default         {0}
#define controller_button_init_default           {0, 0}
#define controller_controller_msg_init_default   {0, {controller_movement_init_default}}
#define controller_movement_init_zero            {0}
#define controller_button_init_zero              {0, 0}
#define controller_controller_msg_init_zero      {0, {controller_movement_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define controller_button_button_id_tag          1
#define controller_button_value_tag              2
#define controller_movement_direction_tag        1
#define controller_controller_msg_go_tag         1
#define controller_controller_msg_btn_tag        2

/* Struct field encoding specification for nanopb */
extern const pb_field_t controller_movement_fields[2];
extern const pb_field_t controller_button_fields[3];
extern const pb_field_t controller_controller_msg_fields[3];

/* Maximum encoded size of messages (where known) */
#define controller_movement_size                 11
#define controller_button_size                   22
#define controller_controller_msg_size           24

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CONTROLLER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
