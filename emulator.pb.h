/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Apr 22 21:54:45 2018. */

#ifndef PB_EMULATOR_EMULATOR_PB_H_INCLUDED
#define PB_EMULATOR_EMULATOR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _emulator_attacks {
    bool trainer;
    uint32_t move;
/* @@protoc_insertion_point(struct:emulator_attacks) */
} emulator_attacks;

typedef struct _emulator_battle_state {
    bool player_status;
    uint32_t match_inProgress;
/* @@protoc_insertion_point(struct:emulator_battle_state) */
} emulator_battle_state;

typedef struct _emulator_emu_msg {
    pb_size_t which_msg;
    union {
        emulator_battle_state battle_ctl;
        emulator_attacks battle_move;
    } msg;
/* @@protoc_insertion_point(struct:emulator_emu_msg) */
} emulator_emu_msg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define emulator_battle_state_init_default       {0, 0}
#define emulator_attacks_init_default            {0, 0}
#define emulator_emu_msg_init_default            {0, {emulator_battle_state_init_default}}
#define emulator_battle_state_init_zero          {0, 0}
#define emulator_attacks_init_zero               {0, 0}
#define emulator_emu_msg_init_zero               {0, {emulator_battle_state_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define emulator_attacks_trainer_tag             1
#define emulator_attacks_move_tag                2
#define emulator_battle_state_player_status_tag  1
#define emulator_battle_state_match_inProgress_tag 2
#define emulator_emu_msg_battle_ctl_tag          1
#define emulator_emu_msg_battle_move_tag         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t emulator_battle_state_fields[3];
extern const pb_field_t emulator_attacks_fields[3];
extern const pb_field_t emulator_emu_msg_fields[3];

/* Maximum encoded size of messages (where known) */
#define emulator_battle_state_size               8
#define emulator_attacks_size                    8
#define emulator_emu_msg_size                    10

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define EMULATOR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
