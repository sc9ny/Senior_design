/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Apr 22 21:54:45 2018. */

#ifndef PB_SENSOR_SENSOR_PB_H_INCLUDED
#define PB_SENSOR_SENSOR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _sensor_color_sensor {
    uint32_t color_code;
    int32_t x;
    int32_t y;
/* @@protoc_insertion_point(struct:sensor_color_sensor) */
} sensor_color_sensor;

typedef struct _sensor_ir_sensor {
    uint32_t distance;
/* @@protoc_insertion_point(struct:sensor_ir_sensor) */
} sensor_ir_sensor;

typedef struct _sensor_sensor_msg {
    pb_size_t which_msg;
    union {
        sensor_ir_sensor dist_data;
        sensor_color_sensor color_data;
    } msg;
/* @@protoc_insertion_point(struct:sensor_sensor_msg) */
} sensor_sensor_msg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sensor_ir_sensor_init_default            {0}
#define sensor_color_sensor_init_default         {0, 0, 0}
#define sensor_sensor_msg_init_default           {0, {sensor_ir_sensor_init_default}}
#define sensor_ir_sensor_init_zero               {0}
#define sensor_color_sensor_init_zero            {0, 0, 0}
#define sensor_sensor_msg_init_zero              {0, {sensor_ir_sensor_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define sensor_color_sensor_color_code_tag       1
#define sensor_color_sensor_x_tag                2
#define sensor_color_sensor_y_tag                3
#define sensor_ir_sensor_distance_tag            1
#define sensor_sensor_msg_dist_data_tag          1
#define sensor_sensor_msg_color_data_tag         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t sensor_ir_sensor_fields[2];
extern const pb_field_t sensor_color_sensor_fields[4];
extern const pb_field_t sensor_sensor_msg_fields[3];

/* Maximum encoded size of messages (where known) */
#define sensor_ir_sensor_size                    6
#define sensor_color_sensor_size                 28
#define sensor_sensor_msg_size                   30

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSOR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
