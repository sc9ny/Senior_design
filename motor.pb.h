/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Apr 22 21:54:45 2018. */

#ifndef PB_MOTOR_MOTOR_PB_H_INCLUDED
#define PB_MOTOR_MOTOR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _motor_motor_ctl {
    uint32_t direction;
/* @@protoc_insertion_point(struct:motor_motor_ctl) */
} motor_motor_ctl;

typedef struct _motor_motor_data {
    uint32_t right_ticks;
    uint32_t cur_dir;
    uint32_t left_ticks;
    uint32_t right_err;
    uint32_t left_err;
/* @@protoc_insertion_point(struct:motor_motor_data) */
} motor_motor_data;

typedef struct _motor_motor_msg {
    pb_size_t which_msg;
    union {
        motor_motor_ctl ctl_msg;
        motor_motor_data data;
    } msg;
/* @@protoc_insertion_point(struct:motor_motor_msg) */
} motor_motor_msg;

/* Default values for struct fields */

/* Initializer values for message structs */
#define motor_motor_ctl_init_default             {0}
#define motor_motor_data_init_default            {0, 0, 0, 0, 0}
#define motor_motor_msg_init_default             {0, {motor_motor_ctl_init_default}}
#define motor_motor_ctl_init_zero                {0}
#define motor_motor_data_init_zero               {0, 0, 0, 0, 0}
#define motor_motor_msg_init_zero                {0, {motor_motor_ctl_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define motor_motor_ctl_direction_tag            1
#define motor_motor_data_right_ticks_tag         1
#define motor_motor_data_cur_dir_tag             2
#define motor_motor_data_left_ticks_tag          3
#define motor_motor_data_right_err_tag           4
#define motor_motor_data_left_err_tag            5
#define motor_motor_msg_ctl_msg_tag              1
#define motor_motor_msg_data_tag                 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t motor_motor_ctl_fields[2];
extern const pb_field_t motor_motor_data_fields[6];
extern const pb_field_t motor_motor_msg_fields[3];

/* Maximum encoded size of messages (where known) */
#define motor_motor_ctl_size                     6
#define motor_motor_data_size                    30
#define motor_motor_msg_size                     32

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MOTOR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
